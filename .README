# 📘 EduSpark – AI-Powered Student Success Platform

**EduSpark** is a full-stack platform built to help students organize, learn, and grow smarter with the help of AI. It combines intelligent study plan generation, tutoring access, collaborative online study rooms, curated local opportunities, and a conversational chatbot for academic support.

---

## 🚀 Features

| Feature                | Description                                                                 |
|------------------------|-----------------------------------------------------------------------------|
| 🧠 AI Study Planner     | Generates subject-specific, date-aware study plans using Gemini API         |
| 📚 Tutoring Access      | Easily discover local & online tutors (school-based, peer-to-peer, etc.)     |
| 🎯 Local Opportunities  | Explore competitions, summer programs, volunteering, and internships        |
| 🧑‍💻 Study Sessions      | Join or create live video call rooms for group studying                     |
| 🤖 Chatbot Assistant    | Ask AI questions about your subject, exams, or assignments                  |
| 📅 Assignment Tracker   | Track and categorize homework, tasks, and deadlines                         |
| 🌐 React Frontend       | Modern and responsive UI with TailwindCSS & component modularity            |
| 🔙 Django Backend       | RESTful API using Django + Django REST Framework (DRF)                      |

---

## 🛠️ Tech Stack

- **Frontend:** React, Axios, TailwindCSS, WebRTC (for video)
- **Backend:** Django, Django REST Framework, CORS, SQLite
- **AI Integration:** Google Gemini API via `REACT_APP_GEMINI_API_KEY`
- **Video Calls:** PeerJS/WebRTC *(optional)*
- **Storage:** Supabase or PostgreSQL *(optional later)*

---

## 🧩 Project Structure

EduSpark/
├── backend/ # Django app
│ ├── api/ # DRF views/serializers
│ └── backend/ # Django settings
├── frontend/ # React app
│ └── src/
│ ├── components/ # All feature modules
│ └── App.js
├── .env # Environment variables (not committed)
├── README.md

yaml
Copy
Edit

---

## 🔐 Environment Variables

### 📄 `/frontend/.env`

```env
REACT_APP_GEMINI_API_KEY=your_gemini_api_key_here
React requires all environment variables to be prefixed with REACT_APP_.

📄 /backend/.env (optional)
env
Copy
Edit
SECRET_KEY=your_django_secret_key
DEBUG=True
GEMINI_API_KEY=your_gemini_api_key_here
⚠️ Do not commit .env files. Add .env to .gitignore.

🧑‍💻 Local Setup (⏱️ Under 2 minutes)
1️⃣ Clone the repo
bash
Copy
Edit
git clone https://github.com/your-username/eduspark.git
cd eduspark
2️⃣ Backend – Django
bash
Copy
Edit
cd backend
python -m venv env
source env/bin/activate     # Windows: env\Scripts\activate
pip install -r requirements.txt
✅ Create .env file
✅ Apply migrations & start server:

bash
Copy
Edit
python manage.py migrate
python manage.py runserver
Backend runs at: http://localhost:8000/api/

3️⃣ Frontend – React
Open a new terminal:

bash
Copy
Edit
cd frontend
npm install
✅ Create .env file inside frontend
✅ Start the React dev server:

bash
Copy
Edit
npm start
Frontend runs at: http://localhost:3000

🧪 Testing the Platform
What to Test	How to Test
📅 Study Plan Generator	Enter subject + exam date → click "Generate" → Gemini plan appears
💬 AI Chatbot	Ask “Explain photosynthesis” or “Summarize chapter 3 in chemistry”
🧑‍🏫 Tutoring	Navigate to “Tutoring” → view available tutor listings
🎯 Opportunities	View curated school-based programs & competitions
📞 Study Calls	Join or create a study room → launches WebRTC or PeerJS video call
✅ Task Tracker	Add/edit/delete assignments & deadlines

🌍 API Endpoints (Django DRF)
Endpoint	Method	Description
/api/tasks/	GET/POST	View or create tasks
/api/tutors/	GET	List of tutor entries
/api/opportunities/	GET	List of events/programs
/api/study-plan/	POST	Generates Gemini-based study plan
/api/chatbot/	POST	LLM-powered Q&A assistant

🧼 Deployment Tips (Optional)
React: Use Vercel, Netlify, or GitHub Pages.

Django: Use Render, Railway, or Heroku.

Add env variables in your hosting dashboard.

Set DEBUG=False and use ALLOWED_HOSTS in settings.py.

📦 Example .gitignore
bash
Copy
Edit
.env
*.pyc
__pycache__/
env/
frontend/node_modules/
frontend/.env
🔧 Future Improvements
🔑 Firebase/Google login

👥 Group invite system for study sessions

📚 AI-powered quiz & flashcard generator

🛠 Admin panel to manage tutors & events

📝 Notetaking with AI summarization

🙋 FAQ
Q: How do I get a Gemini API key?
A: Go to https://makersuite.google.com/app/apikey

Q: Why isn’t my .env variable working in React?
A: Restart npm start after editing .env and make sure it starts with REACT_APP_.

Q: Can this be hosted with free tools?
A: Yes! Use Vercel for frontend and Render, Railway, or Heroku for backend.

🧑‍🎓 Built by Students, for Students
Created by Varshith Gude
Passionate about democratizing smart education through open-source AI tools.
📧 varshithgude.cs@gmail.com